from loader import bot, dp
from aiogram import Bot, types, Dispatcher
import requests # –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ URL
from bs4 import BeautifulSoup # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML
from loader import token

@dp.message_handler(content_types=['text'])  # –ó–∞–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def check(msg: types.Message):
    city_spisok = []
    get_message_bot = msg.text.strip().lower().split(' ')
    if get_message_bot[0] == '/now':  # –ö–æ–º–∞–Ω–¥–∞ /now
        try:
            res = requests.get("http://api.openweathermap.org/data/2.5/find",  # –ü–∞—Ä—Å–∏–Ω–≥ Id –≥–æ—Ä–æ–¥–∞
                               params={'q': get_message_bot[1], 'type': 'like', 'units': 'metric', 'APPID': token})
            data = res.json()
            cities = ["{} ({})".format(d['name'], d['sys']['country'])
                      for d in data['list']]
            city_id = data['list'][0]['id']
        except Exception as e:
            await bot.send_message(msg.from_user.id, '<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥</b>', parse_mode='html')

        try:
            res = requests.get("http://api.openweathermap.org/data/2.5/weather",  # –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ–≥–æ–¥—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                               params={'id': city_id, 'units': 'metric', 'lang': 'ru', 'APPID': token})
            weather_req = requests.get(f'https://api.openweathermap.org/data/2.5/weather&appid={token}'.format(token))
            data = res.json()
            cur_temp = '{0:+3.0f}'.format(data['main']['temp'])
            cur_feels = '{0:+3.0f}'.format(data['main']['feels_like'])
            cur_humid = data['main']['humidity']
            cur_press = data['main']['pressure']
            cur_wind = data['wind']['speed']
            clouds = data['clouds']
            cur_clouds = clouds['all']
            cur_weather = data['weather'][0]['description']
        except Exception as ex:
            pass
        try:
            emoji = ''
            url_now = f'https://www.google.com/search?q={get_message_bot[1]}+weather+now&oq=–Ω–æ–≤–æ&aqs=chrome.0.69i59j69i57j69i59l2j0i131i433i512j69i61l3.793j1j7&sourceid=chrome&ie=UTF-8'
            headers = {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'}
            full_page = requests.get(url_now, headers=headers)
            soup = BeautifulSoup(full_page.content, 'html.parser')
            city = soup.findAll('div', {'class': 'wob_loc', 'class': 'q8U8x', 'id': 'wob_loc'})
            city_now = city[0].text.split(',')
            weather_now = soup.findAll("span", {'id': "wob_dc"})
            temp_now = soup.findAll("span", {"class": "wob_t", "class": "q8U8x", 'id': "wob_tm"})
            temp_now_far = soup.findAll("span", {"class": "wob_t", 'id': "wob_ttm"})
            now_vlajnost = soup.findAll("span", {'id': 'wob_hm'})
            now_osadki = soup.findAll("span", {'id': 'wob_pp'})
            now_veter = soup.findAll("span", {"class": "wob_t", 'id': 'wob_ws'})
            if cur_weather == '—è—Å–Ω–æ':
                emoji = '‚òÄÔ∏è'
            elif cur_weather == '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
                emoji = '‚õÖ'
            elif cur_weather == '–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
                emoji = 'üå§'
            elif cur_weather == '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏':
                emoji = '‚õÖ'
            elif cur_weather == '–ø–∞—Å–º—É—Ä–Ω–æ':
                emoji = '‚òÅÔ∏è'
            elif cur_weather == '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å':
                emoji = 'üåß'
            elif cur_weather == '–¥–æ–∂–¥—å':
                emoji = 'üåß'
            elif cur_weather == '–æ–±–ª–∞—á–Ω–æ':
                emoji = '‚òÅÔ∏è'
            elif cur_weather == '—Å–Ω–µ–≥':
                emoji = 'üå®Ô∏è'
            elif cur_weather == '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥':
                emoji = 'üå®Ô∏è'
            elif cur_weather == '–≥—Ä–æ–∑–∞':
                emoji = '‚õà'
            elif cur_weather == '—Ç—É–º–∞–Ω':
                emoji = 'üå´'
            elif cur_weather == '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥–æ–ø–∞–¥':
                emoji = 'üå®Ô∏è'
            elif cur_weather == '–º–µ—Å—Ç–∞–º–∏ –ª–∏–≤–Ω–∏':
                emoji='‚õàÔ∏è'
            elif cur_weather == '–ª–∏–≤–Ω–∏':
                emoji = '‚õàÔ∏è'
            #####################
            final_mess = f'<b><u>–°–µ–π—á–∞—Å</u></b>\n' \
                         f'–í –≥–æ—Ä–æ–¥–µ {get_message_bot[1].title()} —Å–µ–π—á–∞—Å {cur_weather} {emoji}\n' \
                         f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ–∫–æ–ª–æ {cur_temp}¬∞\n' \
                         f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {cur_feels}¬∞\n' \
                         f'–î–∞–≤–ª–µ–Ω–∏–µ: {cur_press} –º–º —Ä—Ç. —Å—Ç\n' \
                         f'–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {cur_clouds}%\n' \
                         f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {now_vlajnost[0].text}\n' \
                         f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: {now_osadki[0].text}\n' \
                         f'–í–µ—Ç–µ—Ä {cur_wind} –º/—Å'
            await bot.send_message(msg.from_user.id, final_mess, parse_mode='html')
        except Exception as ex:
            pass
        try:
            res = requests.get("http://api.openweathermap.org/data/2.5/forecast",
                               params={'id': city_id, 'units': 'metric', 'cnt' : '16','lang': 'ru', 'APPID': token})
            data = res.json()
            for i in data['list']:
                message = i['dt_txt'], '{0:+3.0f}'.format(i['main']['temp']), i['weather'][0]['description']
                hour_day = i['dt_txt']
                hour_temp = '{0:+3.0f}'.format(i['main']['temp'])
                hour_weather = i['weather'][0]['description']
                hour_wind = i['wind']['speed']
                hour_day = hour_day.split('-')
                hourday = hour_day[2].split(' ')
                if hour_day[1] == '01':
                    month = '—è–Ω–≤'
                if hour_day[1] == '02':
                    month = '—Ñ–µ–≤'
                if hour_day[1] == '03':
                    month = '–º–∞—Ä'
                if hour_day[1] == '04':
                    month = '–∞–ø—Ä'
                if hour_day[1] == '05':
                    month = '–º–∞–π'
                if hour_day[1] == '06':
                    month = '–∏—é–Ω—è'
                if hour_day[1] == '07':
                    month = '–∏—é–ª—è'
                if hour_day[1] == '08':
                    month = '–∞–≤–≥'
                if hour_day[1] == '09':
                    month = '—Å–µ–Ω'
                if hour_day[1] == '10':
                    month = '–æ–∫—Ç'
                if hour_day[1] == '11':
                    month = '–Ω–æ—è'
                if hour_day[1] == '12':
                    month = '–¥–µ–∫'
                if hour_weather == '—è—Å–Ω–æ':
                    hour_emoji = '‚òÄÔ∏è'
                elif hour_weather == '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
                    hour_emoji = '‚õÖ'
                elif hour_weather == '–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
                    hour_emoji = 'üå§'
                elif hour_weather == '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏':
                    hour_emoji = '‚õÖ'
                elif hour_weather == '–ø–∞—Å–º—É—Ä–Ω–æ':
                    hour_emoji = '‚òÅÔ∏è'
                elif hour_weather == '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å':
                    hour_emoji = 'üåß'
                elif hour_weather == '–¥–æ–∂–¥—å':
                    hour_emoji = 'üåß'
                elif hour_weather == '–æ–±–ª–∞—á–Ω–æ':
                    hour_emoji = '‚òÅÔ∏è'
                elif hour_weather == '—Å–Ω–µ–≥':
                    hour_emoji = 'üå®Ô∏è'
                elif hour_weather == '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥':
                    hour_emoji = 'üå®Ô∏è'
                elif hour_weather == '–≥—Ä–æ–∑–∞':
                    hour_emoji = '‚õà'
                elif hour_weather == '—Ç—É–º–∞–Ω':
                    hour_emoji = 'üå´'
                elif hour_weather == '–º–µ—Å—Ç–∞–º–∏ –ª–∏–≤–Ω–∏':
                    hour_emoji = '‚õàÔ∏è'
                elif hour_weather== '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥':
                    hour_emoji = 'üå®Ô∏è'
                hour_mess = f'{hourday[0]} {month}, {hourday[1]}' \
                            f' {hour_temp}¬∞' \
                            f' {hour_wind} –º/c' \
                            f' {hour_weather} {hour_emoji}\n'
                city_spisok.append(hour_mess)
            hour_mess = f'{city_spisok[0]}\n{city_spisok[1]}\n{city_spisok[2]}\n{city_spisok[3]}\n{city_spisok[4]}\n{city_spisok[5]}\n{city_spisok[6]}\n{city_spisok[7]}\n{city_spisok[8]}\n{city_spisok[9]}\n{city_spisok[10]}\n{city_spisok[11]}\n{city_spisok[12]}\n{city_spisok[13]}\n{city_spisok[14]}\n{city_spisok[15]}'
            await bot.send_message(msg.from_user.id, hour_mess, parse_mode='html')
        except Exception as ex:
            print(ex)

    elif get_message_bot[0] == '/tom':  # –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /tom\
        try:
            url_tomorrow = f'https://www.google.com/search?q={get_message_bot[1]}+weather+tomorrow&oq=moscow+weather+to&aqs=chrome.1.69i57j0i512l2j0i22i30j0i10i22i30j0i22i30l5.9477j0j7&sourceid=chrome&ie=UTF-8'
            headers = {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36'}
            full_page = requests.get(url_tomorrow, headers=headers)  # –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ–≥–æ–¥—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞
            soup = BeautifulSoup(full_page.content, 'html.parser')
            city = soup.findAll('div', {'class': 'wob_loc', 'class': 'q8U8x', 'id': 'wob_loc'})
            city = city[0].text.split(',')
            weather_tom = soup.findAll("span", {'id': "wob_dc"})
            temp_tom = soup.findAll("span", {"class": "wob_t", "class": "q8U8x", 'id': "wob_tm"})
            temp_tom_far = soup.findAll("span", {"class": "wob_t", 'id': "wob_ttm"})
            vlajnost_tom = soup.findAll("span", {'id': 'wob_hm'})
            osadki_tom = soup.findAll("span", {"id": "wob_pp"})
            veter_tom = soup.findAll("span", {"class": "wob_t", 'id': 'wob_ws'})
            if weather_tom[0].text.strip().lower() == '—è—Å–Ω–æ':
                emoji = '‚òÄÔ∏è'
            elif weather_tom[0].text.strip().lower() == '–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
                emoji = '‚õÖ'
            elif weather_tom[0].text.strip().lower() == '–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å':
                emoji = 'üå§'
            elif weather_tom[0].text.strip().lower() == '–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏':
                emoji = '‚õÖ'
            elif weather_tom[0].text.strip().lower() == '–ø–∞—Å–º—É—Ä–Ω–æ':
                emoji = '‚òÅÔ∏è'
            elif weather_tom[0].text.strip().lower() == '–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å':
                emoji = 'üåß'
            elif weather_tom[0].text.strip().lower() == '–¥–æ–∂–¥—å':
                emoji = 'üåß'
            elif weather_tom[0].text.strip().lower() == '–æ–±–ª–∞—á–Ω–æ':
                emoji = '‚òÅÔ∏è'
            elif weather_tom[0].text.strip().lower() == '—Å–Ω–µ–≥':
                emoji = 'üå®Ô∏è'
            elif weather_tom[0].text.strip().lower() == '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥':
                emoji = 'üå®Ô∏è'
            elif weather_tom[0].text.strip().lower() == '–≥—Ä–æ–∑–∞':
                emoji = '‚õà'
            elif weather_tom[0].text.strip().lower() == '—Ç—É–º–∞–Ω':
                emoji = 'üå´'
            elif weather_tom[0].text.strip().lower() == '–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥–æ–ø–∞–¥':
                emoji = 'üå®Ô∏è'
            elif weather_tom[0].text.strip().lower() == '–º–µ—Å—Ç–∞–º–∏ –ª–∏–≤–Ω–∏':
                emoji = '‚õàÔ∏è'
            elif weather_tom[0].text.strip().lower() == 'c–Ω–µ–≥–æ–ø–∞–¥':
                emoji = 'üå®Ô∏è'
            else:
                emoji = ''
            final_mess = f'<b><u>–ó–∞–≤—Ç—Ä–∞</u></b>\n' \
                         f'–í –≥–æ—Ä–æ–¥–µ {city[0]} –∑–∞–≤—Ç—Ä–∞ {weather_tom[0].text.strip().lower()} {emoji}\n' \
                         f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ–∫–æ–ª–æ {temp_tom[0].text}¬∞\n' \
                         f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {vlajnost_tom[0].text}\n' \
                         f'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: {osadki_tom[0].text}\n' \
                         f'–í–µ—Ç–µ—Ä {veter_tom[0].text}'

            await bot.send_message(msg.from_user.id, final_mess, parse_mode='html')

        except Exception as ex:
            await bot.send_message(msg.from_user.id, '<b>–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Ä–æ–¥</b>', parse_mode='html')
    else:
        await bot.send_message(msg.from_user.id, '<b>–Ø –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∞—Å –ø–æ–Ω—è–ª</b>', parse_mode='html')
